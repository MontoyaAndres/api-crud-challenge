generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Customer {
  id                Int                            @id @default(autoincrement())
  name              String
  phone             String                         @unique
  email             String                         @unique
  createdAt         DateTime                       @default(now())
  updatedAt         DateTime                       @default(now())
  deletedAt         DateTime?
  orders            Order[]
  shippingAddresses ShippingAddressesOnCustomers[]
}

model ShippingAddressesOnCustomers {
  customerId        Int
  shippingAddressId Int
  status            ShippingAddressStatus?
  customer          Customer               @relation(fields: [customerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  shippingAddress   ShippingAddress        @relation(fields: [shippingAddressId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([customerId, shippingAddressId])
}

model ShippingAddress {
  id        Int                            @id @default(autoincrement())
  street    String
  city      String
  state     String
  country   String
  zipCode   String?
  createdAt DateTime                       @default(now())
  updatedAt DateTime                       @default(now())
  deletedAt DateTime?
  orders    Order[]
  customers ShippingAddressesOnCustomers[]
}

model Order {
  id                Int                @id @default(autoincrement())
  idNumber          Int?               @unique
  date              DateTime
  paymentType       PaymentType
  total             Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  deletedAt         DateTime?
  customerId        Int
  shippingAddressId Int
  customer          Customer           @relation(fields: [customerId], references: [id])
  shippingAddress   ShippingAddress    @relation(fields: [shippingAddressId], references: [id])
  products          ProductsOnOrders[]
}

model ProductsOnOrders {
  orderId   Int
  productId Int
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}

model Product {
  id          Int                @id @default(autoincrement())
  idNumber    Int?               @unique
  title       String
  description String
  price       Int
  weight      Int
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @default(now())
  deletedAt   DateTime?
  orders      ProductsOnOrders[]
}

enum ShippingAddressStatus {
  PRIMARY
}

enum PaymentType {
  CASH
  CREDIT_CARD
  CHECK
  ORDER
}
